@inherits ContextMenu<MediaPeerComponent>

<ContextMenuBase>
    <ContextMenuItem>
        <div>
            <p>Volume</p>
            <input type="range" id="volume" name="volume" min="0" max="150" value="@Data.GetVolume()" @onchange="@OnVolumeChanged" />
        </div>
    </ContextMenuItem>
    @if (Data.GetLocalMuted())
    {
        <ContextMenuItem @onclick='@OnClickUnmute'>
            Unmute
        </ContextMenuItem>
    }
    else
    {
        <ContextMenuItem @onclick='@OnClickMute'>
            Mute
        </ContextMenuItem>
    }
</ContextMenuBase>

@code {
    
    private Task OnClickMute() => Data.SetLocalMutedAsync(true);
    
    private Task OnClickUnmute() => Data.SetLocalMutedAsync(false);

    
    private DateTime _lastVolumeChange = DateTime.MinValue;
    
    private async Task OnVolumeChanged(ChangeEventArgs e)
    {
        Console.WriteLine("Volume changed to " + e.Value);
        
        // debounce
        if ((DateTime.Now - _lastVolumeChange).TotalMilliseconds < 100)
        {
            return;
        }

        if (e.Value is null)
        {
            return;
        }

        if (float.TryParse(e.Value.ToString(), out var volume))
        {
            await Data.SetLocalVolumeAsync(volume);
            _lastVolumeChange = DateTime.Now;
        }
    }

}