@inject WindowManager windowManager
@inject ChannelListManager listManager


<div 
    class="full-channel-list hide-scrollbar"
    ondragover="event.preventDefault();"
    @ondragenter="() => listManager.OnDragEnterItem(0)"
    style="padding-bottom:80px">
    @foreach (Planet planet in ValourClient.OpenPlanets)
    {
        <PlanetListComponent Planet="planet" @key='planet.Id'></PlanetListComponent>
    }
    <div class="channel-fade-left"></div>
    <div class="channel-fade-right"></div>
</div>


@code {
    private bool _render = true;
    protected override bool ShouldRender() => _render;

    protected override void OnAfterRender(bool firstRender)
    {
        _render = false;
    }

    public void Refresh()
    {
        _render = true;
        StateHasChanged();
    }
    
    protected override async Task OnInitializedAsync()
    {
        windowManager.OnPlanetFocused += OnPlanetChange;
        ValourClient.OnPlanetOpen += OnPlanetOpen;
        ValourClient.OnPlanetClose += OnPlanetClose;
    }

    public async Task OnPlanetOpen(Planet planet)
    {
        if (planet == null)
            Console.WriteLine("Rebuilding channel list due to planet open: " + planet.Name);
        else
            Console.WriteLine("Rebuilding channel list due to planet open: null");

        Refresh();
    }

    public async Task OnPlanetClose(Planet planet)
    {
        if (planet == null)
            Console.WriteLine("Rebuilding channel list due to planet close: " + planet.Name);
        else
            Console.WriteLine("Rebuilding channel list due to planet close: null");

        Refresh();
    }

    public async Task OnPlanetChange(Planet planet)
    {
    }
}