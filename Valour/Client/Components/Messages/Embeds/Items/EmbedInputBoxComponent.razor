@inject HttpClient Http
@implements IDisposable

<div style="@Item.GetStyle()" class="embed-item">
    @if (Item.NameItem is not null)
    {
        <div style="margin-left: 2px;">
            <EmbedTextItemComponent _item="@Item.NameItem"></EmbedTextItemComponent>
        </div>
    }
    <input type="text" class="form-control" placeholder="@Item.Placeholder" @bind-value="@Item.Value" style="background-color: var(--main-1);color: var(--font-color);margin-top: 0px;">
</div>

@code {
    [Parameter]
    public EmbedItem _item {get; set;}

    public EmbedInputBoxItem Item { get; set; }

    [CascadingParameter]
    public EmbedComponent embedComponent { get; set; }

    protected override void OnInitialized()
    {
        Item = (EmbedInputBoxItem)_item;
        embedComponent.RefreshItemComponents += Refresh;
    }

    public void Dispose()
    {
        embedComponent.RefreshItemComponents -= Refresh;
    }

    public void Refresh()
    {
        if (!embedComponent.ProcessingEmbedUpdate || (Item.KeepValueOnUpdate is not null && !(bool)Item.KeepValueOnUpdate))
            Item = (EmbedInputBoxItem)_item;
        else
        {
            string value = Item.Value;
            Item = (EmbedInputBoxItem)_item;
            Item.Value = value;
        }
        StateHasChanged();
    }
}