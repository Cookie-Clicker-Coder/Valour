@inject ValourClient Client

<div class="@Class" style="color: @_roleColor" @onclick="ShowProfileAsync">
    @if (_member == null)
    {
        <div>@@NotFound</div>
    }
    else
    {
        <div>@@@_member.Nickname</div>
    }
</div>

@code {

    private string Class
    {
        get
        {
            if (_member == null || _member.UserId != Client.Me.Id)
            {
                return "mention";
            }
            else
            {
                return "mention target";
            }
        }
    }

    [CascadingParameter]
    public Channel Channel { get; set; }

    [Parameter]
    public Mention Mention { get; set; }

    private PlanetMember _member;

    private string _roleColor = "#fff";

    protected async override Task OnInitializedAsync()
    {
        await Build();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (_member != null)
        {
            if (Mention.TargetId != _member.Id)
            {
                await Build();
            }
        }
        else
        {
            await Build();
        }
    }

    private async Task Build()
    {
        if (Channel.PlanetId is not null)
        {
            _member = await Channel.Planet.FetchMemberByUserAsync(Mention.TargetId);
        }
        
        _roleColor = (_member is not null) ? _member.GetRoleColor() : "#fff";

        StateHasChanged();
    }
    
    private async Task ShowProfileAsync(MouseEventArgs e)
    {
        if (_member is null)
            return;

        await ProfilePopup.Instance.OpenAsync(_member, (int)e.ClientX, (int)e.ClientY, "bottomRight");
    }
}
