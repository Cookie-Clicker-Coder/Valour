<div class="@Class" style="color: @RoleColor">
    @if (Role is null)
    {
        <div>@@RoleNotFound</div>
    }
    else
    {
        <div>@@@Role.Name</div>
    }
</div>

@code {

    public string Class
    {
        get
        {
            if (Role is null || !IsTarget)
            {
                return "mention";
            }
            else
            {
                return "mention target";
            }
        }
    }
    
    [CascadingParameter]
    public Channel Channel { get; set; }
    
    [Parameter]
    public Mention Mention { get; set; }
    
    public PlanetRole Role { get; set; }
    public bool IsTarget { get; set; }
    public string RoleColor = "#ffffff";

    protected override async Task OnInitializedAsync()
    {
        await Build();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Role != null)
        {
            if (Mention.TargetId != Role.Id)
            {
                await Build();
            }
        }
        else
        {
            await Build();
        }
    }

    public async Task Build()
    {
        if (Channel.PlanetId is not null)
        {
            Role = await Channel.Planet.FetchRoleAsync(Mention.TargetId);
        }
        RoleColor = Role is null ? "#fff" : Role.Color;

        if (Role is not null)
        {
            var myMember = Channel.Planet.MyMember;
            if (myMember is not null)
            {
                IsTarget = myMember.Roles.Any(r => r.Id == Role.Id);
            }
        }

        StateHasChanged();
    }
}
