@using Valour.Client.Components.Calls
@implements IDisposable

@inject WindowManager windowManager
@inject ChannelListManager listManager

<div class="@Chosen_CSS"
     @onclick="OnClick"
     @onpointerdown:stopPropagation="true"
     @onpointerdown='() => ChannelListContextMenuComponent.SetSelectedItem(Channel)'
     @ondragstart="() => listManager.OnItemStartDragInCategory(Channel, ParentCategory)"
     draggable="true" id="@Channel.Id">
    <div class="channel-icon">
        <img src="_content/Valour.Client/media/voice-channel-icon.svg">
    </div>
    <p class="channel-name">
        @Channel.Name
    </p>
</div>

@code {
    [Parameter]
    public PlanetVoiceChannel Channel { get; set; }

    [Parameter]
    public CategoryListComponent ParentCategory { get; set; }

    public string Chosen_CSS
    {
        get
        {
            return "channel";
        }
    }

    public async Task OnClick()
    {
        /* Very cool logic goes here */
        listManager.OnItemClickInCategory(Channel, ParentCategory);

        await CallComponent.Instance.Initialize(Channel.Id);
        
        StateHasChanged();
    }

    public async Task OnVoiceChannelUpdate(ModelUpdateEvent<PlanetVoiceChannel> eventData)
    {
        var channel = eventData.Model;
        
        if (Channel.Id == channel.Id)
        {
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        ModelObserver<PlanetVoiceChannel>.OnAnyUpdated += OnVoiceChannelUpdate;
    }

    public void Dispose()
    {
        ModelObserver<PlanetVoiceChannel>.OnAnyUpdated -= OnVoiceChannelUpdate;
    }
}