<div class="col-md-12 modal-bg">
	<section>
		<h2>Your Friends</h2>

		<hr />

		<h5>Added you</h5>
		<div class="inner-scroll-box">
			@foreach (var addedMe in ValourClient.FriendRequests)
			{
				<div>
					<div class="user-info">
						<img class="pfp" src="@addedMe.PfpUrl" />
						<p class="name">@addedMe.Name</p>
					</div>

					<div class="btn-group options" role="group" aria-label="Friend Accept or Deny">
						<button @onclick="async () => await OnAcceptRequest(addedMe)" type="button" class="btn v2-button">Accept</button>
						<button @onclick="async () => await OnDeclineRequest(addedMe)" type="button" class="btn v2-button-danger">Decline</button>
					</div>
				</div>
			}
		</div>
		<span class="text-danger mb-2">@addedYouError</span>

		<h5 style="margin-top: 20px">You added</h5>
		<div class="inner-scroll-box">
			@foreach (var added in ValourClient.FriendsRequested)
			{
				<div>
					<div class="user-info">
						<img class="pfp" src="@added.PfpUrl" />
						<p class="name">@added.Name</p>
					</div>

					<div class="btn-group options" role="group" aria-label="Friend Accept or Deny">
						<button @onclick="async () => await OnCancelRequest(added)" type="button" class="btn v2-button-danger">Cancel</button>
					</div>
				</div>
			}
		</div>
		<span class="text-danger mb-2">@addedError</span>


		<div asp-validation-summary="All" class="text-info"></div>

		<div class="form-group mt-4">
			<label>Friend's Username</label>
			<input class="form-control" @bind-value="@name" type='' />
			<span id="name-span" style="color:#888888">@nameSpan</span>
		</div>


		@if (!string.IsNullOrEmpty(errorSpan))
		{
			<br />
			<span class="text-danger mt-4 mb-4">@errorSpan</span>
		}

		<div class="d-flex form-group mt-4" style="align-items: center">
			<button class="btn v-button mt-2" @onclick="OnClickSubmit">Add Friend</button>
			@if (!string.IsNullOrWhiteSpace(successSpan))
			{
				<span class="text-info" style="display: inline-block; margin-left: 15px;">@successSpan</span>
			}
		</div>
	</section>
</div>

@code {
	// Input fields
	string name;

	// Spans
	string nameSpan = "The username of your friend";

	string errorSpan = null;
	string successSpan = null;

	string addedYouError = null;
	string addedError = null;

	[Parameter]
	public ClientWindow Window { get; set; }

	[CascadingParameter]
	public BlazoredModalInstance ModalInstance { get; set; }

	private async Task OnClickSubmit(MouseEventArgs e)
	{
		// Require a name
		if (string.IsNullOrWhiteSpace(name))
		{
			errorSpan = "Please input a username.";
			return;
		}

		var response = await ValourClient.AddFriendAsync(name);

		if (!response.Success)
		{
			errorSpan = response.Message;
			StateHasChanged();
			return;
		}

		successSpan = "Added friend successfully.";
	}

	public async Task OnAcceptRequest(User user)
	{
		addedYouError = "";

		var result = await ValourClient.AddFriendAsync(user.Name);
		if (!result.Success){
			addedYouError = result.Message;
		}

		StateHasChanged();
	}

	public async Task OnDeclineRequest(User user)
	{
		addedYouError = "";

		var result = await ValourClient.DeclineFriendAsync(user.Name);
		if (!result.Success)
		{
			addedYouError = result.Message;
		}

		StateHasChanged();
	}

	public async Task OnCancelRequest(User user)
	{
		addedError = "";

		var result = await ValourClient.CancelFriendAsync(user.Name);
		if (!result.Success)
		{
			addedError = result.Message;
		}

		StateHasChanged();
	}
}