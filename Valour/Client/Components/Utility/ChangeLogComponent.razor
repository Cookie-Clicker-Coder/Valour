@inject ILocalStorageService LocalStorage

@if (!_show)
{
    return;
}

<div class="change-log" @onclick="OnClose">
    <h4>Valour 0.2.3.0 Changelog (Click to close)</h4>
    
    <img alt="Valour logo for version 0.2.3.0 changelog" style="width: 95%; margin-bottom: 18px" src="_content/Valour.Client/media/0.2.3.0.jpg" />
    
    <p style="color: #00ffff">PROFILES AND VALOUR PLUS! And referrals get you rewards!</p>
    <ul>
        <li style="color: #ff00ff">Add the Stargazer Valour Plus subscription!</li>
        <ul>
            <li>You can use Valour Credits to get access!</li>
            <li>You can earn Valour Credits by referring users, or by being sent some by other users!</li>
            <li>Stargazers get access to 20MB upload limits and amazing profile options!</li>
            <li>Stargazers also get a badge in chat!</li>
        </ul>
        <li>New Profiles!</li>
        <ul>
            <li>Profiles pop up when you click a username</li>
            <li>You can customize the color and glow</li>
            <li>There's space to write a bio and headline</li>
            <li>Stargazers can make custom animated gradient borders!</li>
        </ul>
        <li>Referral awards!</li>
        <ul>
            <li>You gain 50 Valour Credits per referral to start</li>
            <li>Every 5 you recruit per month halves the reward</li>
            <li>This is to protect from a streamer or celebrity blowing up the economy</li>
            <li>Thanks for growing Valour!</li>
        </ul>

        <li>Fix mobile image sizing</li>
        <li>Fix some eco module issues</li>
    </ul>
    <p>Thank you for using Valour! Glad to keep getting upgrades out for you guys :) - Spike</p>
</div>

@code {

    private bool _show = false;
    
    protected override async Task OnInitializedAsync()
    {
        var version = typeof(ValourClient).Assembly.GetName().Version.ToString();
        
        if (!await LocalStorage.ContainKeyAsync("LastVersion") ||
            await LocalStorage.GetItemAsync<string>("LastVersion") != version)
        {
            _show = true;
            await LocalStorage.SetItemAsync<string>("LastVersion", version);
            
            StateHasChanged();
        }
    }
    
    private void OnClose()
    {
        _show = false;
        StateHasChanged();
    }

}