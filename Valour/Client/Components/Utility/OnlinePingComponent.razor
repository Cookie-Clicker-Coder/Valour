@implements IDisposable

@code {
    // The timer that controls state updates
    private Timer _timer;
    
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _timer = new Timer(OnUpdateTimer, null, TimeSpan.Zero, TimeSpan.FromSeconds(60));
    }

    private async void OnUpdateTimer(object state)
    {
        // Only run if logged in
        if (ValourClient.Self is null)
            return;
        
        var pingResult = await ValourClient.PrimaryNode.GetAsync("api/user/ping");
        if (!pingResult.Success)
            await Logger.Log("Failed to ping server for online state", "salmon");
    }
    
    void IDisposable.Dispose()
    {
        _timer?.Dispose();
    }
}