@inject WindowManager windowManager
@inject IJSRuntime JS

<div @onclick="OnClick" class="home-icon-outer">

    <img src='@iconUrl' class="icon" @onerror='OnIconError' style='@image_style' />

    <svg style='position: absolute; left: -10px; top: -10px' width='160px' height='160px' id="shape" xmlns="http://www.w3.org/2000/svg"
         xmlns:xlink="http://www.w3.org/1999/xlink">
        <defs>
            <path id="path"
                  fill="none" stroke="black" stroke-width="10"
                  d="
                    M 80, 80
                    m -60, 0
                    a 60,60 0 1,0 120,0
                    a 60,60 0 1,0 -120,0
                    "
                  transform="rotate(90 80 80)">
            </path>
        </defs>
        <text id="text-@Friend.Id">
            <textPath xlink:href="#path" startOffset="50%" text-anchor="middle">
                <tspan class="title" fill='white' dy="0.3em">Loading...</tspan>
            </textPath>
        </text>
    </svg>
</div>


@code {
    [Parameter]
    public User Friend { get; set; }

    [Parameter]
    public HomeWindow Window { get; set; }

    public string iconUrl = "/media/logo/logo-512.png";

    public string image_style = "";

    protected override async Task OnInitializedAsync(){
        iconUrl = Friend.PfpUrl;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JS.InvokeVoidAsync($"SetCardTitle", Friend.Id, Friend.Name);
    }

    public async Task OnClick()
    {
        // Get dm channel
        var channel = await DirectChatChannel.FindAsyncByUser(Friend.Id);
        var newWindow = new DirectChatChannelWindow(channel);

        Console.WriteLine($"Switching window {Window.Id} to direct chat channel {channel.Id}");

        await windowManager.ReplaceWindow(Window, newWindow);
        await windowManager.SetSelectedWindow(newWindow);
        await windowManager.SetFocusedPlanet(null);

        StateHasChanged();
    }

    protected void OnIconError()
    {
        iconUrl = "_content/Valour.Client/media/logo/logo-512.png";

        int r = Random.Shared.Next(24) * 15;

        image_style = $"filter: hue-rotate({r}deg)";

        StateHasChanged();
    }
}