@inject WindowManager windowManager
@inject IJSRuntime JS

<div id="flipper-discover-@Planet.Id-@Window.Id" class="flipper" onmouseover="determineFlip('flipper-discover-@Planet.Id-@Window.Id', 220)"> 
    <ContextMenuTrigger style="display: inline-block;" MouseButtonTrigger="MouseButtonTrigger.ContextOrHold" MenuId='planet-context' @onpointerdown='async () => await PlanetContextMenuComponent.SetSelectedPlanet(Planet)'>
        
        <div class="outer-circle" @onclick="OnClick">
            <img src='@iconUrl' class="icon" @onerror='OnIconError' style='@image_style'/>
            <div class="rect-slide">
                <div class="text-wrapper">
                    <div class="text-flex">
                        <b class="planet-name">@Planet.Name</b>
                    </div>
                </div>
            </div>
        </div>
    </ContextMenuTrigger>
</div>

@code {
    [Parameter]
    public Planet Planet { get; set; }

    [Parameter]
    public HomeWindow Window { get; set; }

    [CascadingParameter]
    public IModalService Modal { get; set; }

    public string iconUrl = "/media/logo/logo-512.png";

    public string image_style = "";

    protected override async Task OnInitializedAsync(){
        iconUrl = Planet.IconUrl;
    }

    public async Task OnClick()
    {
        // Attempt to join planet
        var result = await ValourClient.JoinPlanetAsync(Planet);

        InfoModalData imodalData;

        if (!result.Success)
        {
            imodalData =
            new($"Failed to join.",
                "Reason: " + result.Message,
                "Okay",
                async () =>
                {
                    Console.WriteLine("User Clicked Ok");
                }
            );
        }
        else
        {
            imodalData =
            new($"Joined planet!",
                "Have a nice stay!",
                "Okay",
                async () =>
                {
                    Console.WriteLine("User Clicked Ok");
                }
            );
        }

        ModalParameters imodParams = new();
        imodParams.Add("Data", imodalData);

        Modal.Show<InfoModalComponent>("Info", imodParams);
    }

    protected void OnIconError()
    {
        iconUrl = "_content/Valour.Client/media/logo/logo-512.png";

        int r = Random.Shared.Next(24) * 15;

        image_style = $"filter: hue-rotate({r}deg)";

        StateHasChanged();
    }
}