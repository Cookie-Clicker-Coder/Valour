@inject IJSRuntime JsRuntime

<ContextMenuBase Id="planet-context" CssClass="context">
    @if (ValourClient.Self.Id != Planet.OwnerId)
    {
        <BlazorContextMenu.Item CssClass="context-item" OnClick='@OnClickLeavePlanet'>Leave Planet</BlazorContextMenu.Item>
    }
    @if (CanEdit)
    {
        <BlazorContextMenu.Item CssClass="context-item" OnClick='@OnClickEdit'>Edit</BlazorContextMenu.Item>
    }
    <BlazorContextMenu.Item CssClass="context-item" OnClick='@OnClickCopyId'>Copy Id</BlazorContextMenu.Item>
</ContextMenuBase>

@code {

    [CascadingParameter]
    public ModalRoot ModalRoot { get; set; }

    public static Planet Planet { get; set; }

    public static bool CanEdit { get; set; }

    public static PlanetContextMenuComponent Instance;

    public static async Task SetSelectedPlanet(Planet planet)
    {
        Planet = planet;

        var selfMember = await ValourClient.GetSelfMember(planet.Id);
        if (selfMember is null)
        {
            CanEdit = false;
        }
        else
        {
            CanEdit = await selfMember.HasPermissionAsync(PlanetPermissions.Manage);
        }

        Instance.Refresh();
    }

    protected override void OnInitialized()
    {
        Instance = this;
    }

    private void OnClickEdit()
    {
        var data = new EditPlanetComponent.ModalParams()
        {
            Planet = Planet
        };
        
        ModalRoot.OpenModal<EditPlanetComponent>(data);
    }

    public void Refresh()
    {
        StateHasChanged();
    }

    public async Task OnClickCopyId()
    {
        await JsRuntime.InvokeVoidAsync("clipboardCopy.copyText", Planet.Id);
    }

    public void OnClickLeavePlanet()
    {
        var modalData =
        new ConfirmModalComponent.ModalParams(
             $"Leave {Planet.Name}?",
             "Are you sure?",
             "Continue",
             "Cancel",
             async () =>
             {
                 Console.WriteLine("Confirmed leaving planet.");
                 var result = await ValourClient.LeavePlanetAsync(Planet);
                 Console.WriteLine("Leave: " + result.Message);
             },
             () => Task.CompletedTask
        );
        
        ModalRoot.OpenModal<ConfirmModalComponent>(modalData);
    }
}
