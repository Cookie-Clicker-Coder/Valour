@page "/CreatePlanet"

@inject HttpClient Http
@inject NavigationManager navManager
@inject ILocalStorageService storage
@inject ClientWindowManager windowManager

<body class="login-background" style="background-image: url(/media/Abstract-Background.png)">
    <div class="popup-box">
        <div class="col-md-12">
            <section>
                <h2>Create a new Planet</h2>

                <h4>The birth of a community!</h4>
                <hr />
                <div asp-validation-summary="All" class="text-info"></div>
                <div class="form-group mt-2">
                    <label>Community Name</label>
                    <input class="form-control" @bind-value="@name" />
                    <span id="name-span" style="color:#888888">@nameSpan</span>
                </div>
                <div class="form-group mt-2" style="display: inline-block; width:80%">
                    <label>Icon Url</label>
                    <input class="form-control" @bind-value="@image_url" @bind-value:event="oninput" />
                    <span id="image-span" style="color:#888888">@imageSpan</span>
                </div>
                <img class="mt-2" src="@image_url" style="width: 64px; height: 64px; float:right" />
                <div class="form-group mt-4">
                    <button class="btn btn-primary mt-2" @onclick="OnClickSubmit">Submit</button>
                </div>
            </section>
        </div>
    </div>
</body>

@code {
    // Input fields
    string name;
    string image_url = "https://valour.gg/image.png";

    // Spans
    string nameSpan = "The name of your community";
    string imageSpan = "The link to your intended planet icon";

    private async Task OnClickSubmit(MouseEventArgs e)
    {

        // Require a name
        if (string.IsNullOrWhiteSpace(name))
        {
            name = "Please input a planet name.";
            return;
        }

        // Default to valour logo
        if (string.IsNullOrWhiteSpace(image_url))
        {
            image_url = "https://valour.gg/image.png";
        }

        Planet planet = new Planet()
        {
            Name = name,
            Image_Url = image_url
        };

        var response = await ValourClient.PostAsyncWithResponse<ulong>($"api/planet", planet);

        if (!response.Success)
        {
            imageSpan = $"Error: " + response.Message;
            return;
        }

        ulong planetId = response.Data;

        Planet result = await Planet.FindAsync(planetId);

        if (result == null)
        {
            imageSpan = "An error occured retrieving the created planet. Please try again.";
        }

        PlanetChatChannel mainChannel = await result.GetPrimaryChannelAsync();

        windowManager.ClearWindows();

        await windowManager.AddWindow(new ChatChannelWindow(0, mainChannel));
        await windowManager.SetSelectedWindow(0);

        // Return to index
        navManager.NavigateTo("/");

    }
}
