@page "/ForgotPassword"

@inject HttpClient Http
@inject NavigationManager NavManager
@inject ILocalStorageService Storage

<body class="login-background" style="background-image: url(_content/Valour.Client/media/Abstract-Background.png)">
    <div class="popup-box">
        
        @if (_emailed)
        {
            <h4>Email sent.</h4>
            <h6>Make sure to check your spam folder!</h6>
        }
        else
        {
            <div class="col-md-12">
                <section>
                    <h4>Forgot your password?</h4>

                    <h6>No worries!</h6>
                    <hr/>
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group mt-2">
                        <label>Email</label>
                        <input type="email" class="form-control" @bind-value="@email"/>
                        <span id="email-span" class="text-danger">@emailSpan</span>
                    </div>
                    @if (!string.IsNullOrWhiteSpace(errorSpan))
                    {
                        <span id="error-span" class="text-danger" style="display:block">@errorSpan</span>
                    }
                    <div class="form-group mt-4" style="display:inline-block">
                        <button class="btn btn-primary mt-2" @onclick="OnClickSubmit">Submit</button>
                    </div>
                </section>
            </div>
        }
    </div>
</body>

@code {

    private bool _emailed = false;
    
    // Input fields
    string email;

    // Spans
    string emailSpan;
    string errorSpan;

    private async Task OnClickSubmit(MouseEventArgs e)
    {
        emailSpan = "";
        errorSpan = "";

        if (string.IsNullOrWhiteSpace(email))
        {
            emailSpan = "Please input an email.";
            return;
        }

        JsonContent content = JsonContent.Create(email);

        var response = await Http.PostAsync($"api/users/resetpassword", content);

        var message = await response.Content.ReadAsStringAsync();

        if (!response.IsSuccessStatusCode)
        {
            errorSpan = message;
            StateHasChanged();
            return;
        }

        _emailed = true;
        StateHasChanged();
    }
}
