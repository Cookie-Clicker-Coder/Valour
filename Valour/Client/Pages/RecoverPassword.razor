@page "/RecoverPassword/{Code}"

@inject HttpClient Http
@inject NavigationManager NavManager
@inject ILocalStorageService Storage

<body class="login-background" style="background-image: url(_content/Valour.Client/media/Abstract-Background.png)">
    <div class="popup-box">
        @if (_recovered)
        {
            <h4>Your password has been changed.</h4>
            <h6>You may now use it to log in.</h6>
        }
        else
        {
            <div class="col-md-12">
                <section>
                    <h4>Change your password</h4>

                    <h6>Don't forget it!</h6>
                    <hr/>
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group mt-2">
                        <label>New Password</label>
                        <input type="password" class="form-control" @bind-value="@password"/>
                        <span id="password-span" class="text-danger">@passwordSpan</span>
                    </div>
                    <div class="form-group mt-2">
                        <label>Confirm Password</label>
                        <input type="password" class="form-control" @bind-value="@passwordConf"/>
                        <span id="password-conf-span" class="text-danger">@passwordConfSpan</span>
                    </div>
                    <span id="result-span" class="text-info">@resultSpan</span>
                    <span id="error-span" class="text-danger" style="display:block">@errorSpan</span>
                    <div class="form-group mt-4" style="display:inline-block">
                        <button class="btn btn-primary mt-2" @onclick="OnClickSubmit">Submit</button>
                    </div>
                </section>
            </div>
        }
        
    </div>
</body>

@code {

    private bool _recovered = false;

    [Parameter]
    public string Code { get; set; }

    string password;
    string passwordConf;

    string passwordSpan;
    string passwordConfSpan;

    string resultSpan;
    string errorSpan;

    protected override Task OnInitializedAsync()
    {
        return Task.CompletedTask;
    }

    private async Task OnClickSubmit(MouseEventArgs e)
    {
        passwordSpan = "";
        passwordConfSpan = "";

        resultSpan = "";
        errorSpan = "";

        if (string.IsNullOrWhiteSpace(password))
        {
            passwordSpan = "Please input a password.";
            return;
        }

        if (!string.Equals(password, passwordConf))
        {
            passwordConfSpan = "Passwords do not match";
            return;
        }

        var content = JsonContent.Create(
            new PasswordRecoveryRequest()
            {
                Code = Code,
                Password = password
            }
        );

        var response = await Http.PostAsync($"api/users/me/recovery", content);

        var message = await response.Content.ReadAsStringAsync();

        if (response.IsSuccessStatusCode)
        {
            resultSpan = message;

            password = "";
            passwordConf = "";

            _recovered = true;
        }
        else{
            errorSpan = message;
        }
        
        StateHasChanged();
    }
}
