@page "/Register/{birthDayString}"
@page "/Register"

@inject HttpClient Http
@inject NavigationManager navManager
@inject ILocalStorageService storage

<body class="login-background" style="background-image: url(_content/Valour.Client/media/Abstract-Background.png)">
    <div class="popup-box">
        <div class="col-md-12">
            @if (!responseSuccess)
            {
                <section>
                    <h2>Register for Valour</h2>

                    <h4>Welcome to our app!</h4>
                    <hr />
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div class="form-group mt-2">
                        <label>Username</label>
                        <input class="form-control" @bind-value="@username" />
                    </div>
                    <div class="form-group mt-2">
                        <label>Email</label>
                        <input type="email" class="form-control" @bind-value="@email" />
                    </div>
                    <div class="form-group mt-2">
                        <label>Password</label>
                        <input type="password" class="form-control" @bind-value="@password" />
                    </div>
                    <div class="form-group mt-2">
                        <label>Confirm Password</label>
                        <input type="password" class="form-control" @bind-value="@passwordConf" />
                    </div>
                    <div class="form-group mt-2">
                        <label>Referral (Optional)</label>
                        <input type="text" class="form-control" @bind-value="@referral" />
                        <span id="referral-info-span" class="text-info">This is the username of a user who sent you to Valour!</span>
                    </div>
                    <div class="form-group mt-4">
                        <div style="display: inline-block">
                            <p>
                                <input type="checkbox" @bind-value="@agreed" /> &nbsp; By checking this box, you acknowledge you have read and agree to the Valour <a href="https://github.com/SpikeViper/Valour/blob/main/TERMS_OF_SERVICE.md">Terms of Service </a>
                                and to follow the <a href="https://github.com/SpikeViper/Valour/blob/main/PLATFORM_RULES.md"> Platform Rules. </a>
                            </p>
                        </div>
                    </div>
                    <span id="agreed-span" class="text-danger">@errorSpan</span>

                    <div class="form-group mt-4">
                        <button class="btn v-button v-button-primary mt-2" @onclick="OnClickSubmit" disabled="@disableSubmit">Submit</button>
                    </div>
                </section>
            }
            else
            {
                <ConfirmationEmail RegisterRequest="@registerRequest"></ConfirmationEmail>
            }
        </div>
    </div>
</body>

@code {

    [Parameter]
    public string birthDayString { get; set; }

    public DateTime birthDay;

    public RegisterUserRequest registerRequest;

    bool responseSuccess = false;

    bool disableSubmit = false;

    // Input fields
    string email;
    string password;
    string passwordConf;
    string username;
    string referral;

    // Spans
    string errorSpan;

    // Agreeance
    bool agreed;

    protected async override Task OnInitializedAsync()
    {
        if (string.IsNullOrWhiteSpace(birthDayString))
        {
            navManager.NavigateTo("/AgeVeri");
        }

        birthDay = JsonSerializer.Deserialize<DateTime>(birthDayString);

        if (birthDay == new DateTime())
        {
            navManager.NavigateTo("/AgeVeri");
        }

        int years = DateTime.Now.Subtract(birthDay).Days / 365;

        if (years < 13)
        {
            errorSpan = "You must be 13 years of age or older to use Valour.";
            navManager.NavigateTo("/AgeVeri");
        }

        if (years > 120)
        {
            errorSpan = $"If you are actually {years} years old, please contact us at support@valour.gg and we will buy you a cake.";
            navManager.NavigateTo("/AgeVeri");
        }
    }

    private async Task OnClickSubmit(MouseEventArgs e)
    {
        errorSpan = "";

        if (!agreed)
        {
            errorSpan = "You must read and accept the Terms of Service and Platform Rules to use Valour.";
            return;
        }

        if (string.IsNullOrWhiteSpace(email))
        {
            errorSpan = "Please input an email.";
            return;
        }

        if (string.IsNullOrWhiteSpace(password))
        {
            errorSpan = "Please input a password.";
            return;
        }

        if (!string.Equals(password, passwordConf))
        {
            errorSpan = "Passwords do not match";
            return;
        }

        if (string.IsNullOrWhiteSpace(username))
        {
            errorSpan = "Please input an username.";
            return;
        }

        disableSubmit = true;
        StateHasChanged();

        registerRequest = new RegisterUserRequest()
        {
            Username = username,
            Email = email,
            Password = password,
            Referrer = referral
        };

        TaskResult result = (await ValourClient.PostAsyncWithResponse<TaskResult>("api/user/register", registerRequest)).Data;

        errorSpan = result.Message;
        responseSuccess = result.Success;

        disableSubmit = result.Success;
    }
}
