@inject HttpClient http

<h3>Basic Details</h3>
<hr />
<br />

<div class="settings-inner">
    <p>Name</p>
    <input class="form-control" type="text" @bind-value="@nameValue" />
    <span id="result-span" class="text-info">@nameSpan</span>
    <span class="text-danger">@nameErrorSpan</span>

    <div class="mb-2"></div>

    <br />

    <p>Description</p>
    <input class="form-control" type="text" @bind-value="@descValue" />
    <span id="result-span" class="text-info">@descSpan</span>
    <span class="text-danger">@descErrorSpan</span>

    <div class="btn btn-outline-primary settings-save-button" @onclick="OnSaveChanges">Save</div>
</div>


@code {
    [Parameter]
    public PlanetChannel Item { get; set; }

    public string nameValue;
    public string descValue;

    public string nameErrorSpan;
    public string descErrorSpan;

    public string nameSpan;
    public string descSpan;

    protected override async Task OnInitializedAsync()
    {
        nameValue = Item.Name;
        descValue = Item.Description;

        nameErrorSpan = "";
        descErrorSpan = "";

        StateHasChanged();
    }

    public async Task OnSaveChanges()
    {

        if (nameValue != Item.Name)
        {
            TaskResult result = await Item.SetNameAsync(nameValue);

            if (!result.Success)
            {
                nameErrorSpan = result.Message;
            }
            else
            {
                nameSpan = result.Message;
            }
        }

        if (descValue != Item.Description)
        {
            TaskResult result = await Item.SetDescriptionAsync(descValue);

            if (!result.Success)
            {
                descErrorSpan = result.Message;
            }
            else
            {
                descSpan = result.Message;
            }
        }

        StateHasChanged();
    }
}
