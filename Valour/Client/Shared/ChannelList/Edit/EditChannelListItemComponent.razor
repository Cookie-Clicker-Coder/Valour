@inject HttpClient Http
@inject NavigationManager navManager


<body class="edit-body">
    <div class="container">
        <div class="row settings-row">
            <div class="col-3 edit-col-left">
                <b>@GetTitle()</b>
                <hr />
                <div class="@GetButtonClass(0)" @onclick="(async () => SetSelectedTab(0))">Info</div>
                <div class="@GetButtonClass(1)" @onclick="(async () => SetSelectedTab(1))">Permissions</div>
            </div>
            <div class="col-9 edit-col-right">
                @switch (selected)
                {
                    case 0:
                        <EditCLIDetailsComponent Item="ChannelListItem"></EditCLIDetailsComponent>
                        break;
                    case 1:
                        <EditCLIPermissionsComponent Target="ChannelListItem"></EditCLIPermissionsComponent>
                        break;
                    default:
                        break;

                }
            </div>
        </div>
    </div>
</body>

@code {
    [Parameter]
    public IPlanetChannel ChannelListItem { get; set; }

    public bool isChannel;
    public PlanetChatChannel Channel;
    public PlanetCategory Category;


    public string GetTitle()
    {
        if (isChannel)
        {
            return $"Channel: {Channel.Name}";
        }
        else
        {
            return $"Category: {Category.Name}";
        }
    }

    public string GetButtonClass(int tab)
    {
        if (buttonStates[tab])
        {
            return "settings-button active";
        }

        return "settings-button";
    }

    public bool[] buttonStates = new bool[2]
    {
        true, false
    };

    public int selected = 0;

    protected override async Task OnInitializedAsync()
    {
        if (ChannelListItem.ItemType == ItemType.ChatChannel)
        {
            isChannel = true;
            Channel = (PlanetChatChannel)ChannelListItem;
            Category = null;
        }
        else
        {
            isChannel = false;
            Category = (PlanetCategory)ChannelListItem;
            Channel = null;
        }
    }

    public void SetSelectedTab(int tab)
    {
        Console.WriteLine("Set selected to " + tab);

        for (int i = 0; i < buttonStates.Length; i++)
        {
            buttonStates[i] = false;
        }

        buttonStates[tab] = true;

        selected = tab;

        StateHasChanged();
    }
}