@inject IJSRuntime JS

@if (Visible)
{
    <div class="mention-select">

        @{ int i = 0; }

        @foreach (var member in Matches)
        {
            var x = i;

            <MentionSelectMemberComponent @key="member.Id" Parent="this" Member="member" Selected="(x == Selected)" ></MentionSelectMemberComponent>
            i++;
        }
    </div>
}

@code {

    public bool Visible { get; set; }

    public string Text { get; set; }

    public int Selected { get; set; }

    public List<PlanetMember> Matches;

    [CascadingParameter]
    public PlanetChatChannel Channel { get; set; }

    [CascadingParameter]
    public ChannelWindowComponent ChannelComponent { get; set; }

    public Planet Planet { get; set; }

    public List<PlanetMember> Members;

    protected override async Task OnInitializedAsync()
    {
        Planet = await Channel.GetPlanetAsync();
        Matches = new List<PlanetMember>();
        Members = await Planet.GetMembersAsync();
    }

    public void SetVisible(bool value)
    {
        Visible = value;
        StateHasChanged();
    }

    public async Task Submit()
    {
        var selected = Matches[Selected];

        string tag = $"«@m-{selected.Id}» ";

        await JS.InvokeVoidAsync("InjectText", tag, ChannelComponent.Window.Index, true);

        SetVisible(false);

        Selected = 0;
    }

    public async Task SetText(string new_text)
    {
        Text = new_text.TrimStart('@').ToLower();

        // Get members which may match
        Matches = Members.Where(x => x.Nickname.ToLower().Contains(Text))
                         .OrderByDescending(x => x.Nickname.ToLower().StartsWith(Text))
                         .ThenBy(x => x.Nickname.Length)
                         .Take(10)
                         .ToList();

        StateHasChanged();
    }

    public void MoveSelect(int n)
    {
        Selected += n;

        if (Selected > Matches.Count - 1)
        {
            Selected = 0;
        }
        else if (Selected < 0)
        {
            Selected = Matches.Count - 1;
        }

        StateHasChanged();
    }
}
